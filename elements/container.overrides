/*******************************
         Theme Overrides
*******************************/

// Make sure nested containers align well on mobile
.ui.container:not(.fluid) .container {
    @media only screen and (max-width: @tabletBreakpoint) {
        margin-left: 0 !important;
        margin-right: 0 !important;
    }
}

// Make sure fluid containers don't have any margins on mobile
.ui.fluid.container {
    @media only screen and (max-width: @largestMobileScreen) {
        margin-left: 0 !important;
        margin-right: 0 !important;
    }
}

// Inflate text for optimal readability in text containers and templates
body.readability #content .ui.container,
.ui.text.container:not(.conventional) {
    p {
        &:not(.meta):not(:first-child) {
            margin-top: @verticalRhythm3;
        }

        @media only screen and (min-width: @tabletBreakpoint) {
            font-size: @textSize;
            line-height: @textLineHeight;
        }

        + h2,
        + h3,
        + h4 {
            margin-top: @verticalRhythm5;
            margin-bottom: @verticalRhythm3;
        }
    }
}

// Responsive tweaks
.ui.text.container {
    // Match exact container width on tablet, since that will be very close anyway
    @media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
        max-width: @tabletWidth;
    }

    // Reduce font size on mobile
    @media only screen and (max-width: @largestMobileScreen) {
        font-size: inherit;
    }
}

// Set width for custom tightened container
.ui.tightened.container {
    max-width: @computerWidth;
}

// Make sure the max-width settings don't stretch the container beyond 100%
.ui.text.container,
.ui.tightened.container {
    body.vertical & {
        @media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestSmallMonitor) {
            width: 100% !important;
        }
    }
}