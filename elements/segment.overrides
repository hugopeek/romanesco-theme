/*******************************
         Theme Overrides
*******************************/

// Change font size inside segments, since they were set to 1rem after SUI 2.2 update
// @todo: investigate

.ui.segments .segment,
.ui.segment {
    font-size: inherit;
}

// Segment containing a layout added through CB
.ui.vertical.stripe.segment {
    padding: @verticalRhythm5 0;

    // Stick similar segments together and remove border
    body.detail &,
    body.publication & {
        &.white + .white {
            border-top: none;
            padding-top: 0;
        }
        &.transparent + .transparent {
            border-top: none;
            padding-top: 0;
        }
    }

    // Make boxes out of non-white segments in detail templates
    // Also include white segments on non-white backgrounds
    body.detail #main .ui.container:not(.fluid) &:not(.white),
    body.detail.non-white #main .ui.container:not(.fluid) &.white {
        margin-bottom: @verticalRhythm5;
        padding: 0;
        border-top: none;
        border-radius: @defaultBorderRadius;

        &:not(.transparent) {
            padding: @verticalRhythm3 2em;
        }

        + .white {
            border-top: none;
            padding-top: 0;
        }
    }

    // Set background on white segments
    &.white {
        background-color: @white;
    }

    // Don't mute text color in secondary stripe segments
    &.secondary:not(.inverted) {
        color: @textColor;
    }

    // Introduction segment is used in articles and contains a separate header
    &.introduction {
        padding-bottom: @verticalRhythm3;
        .subtitle {
            margin-bottom: 0 !important;
        }
    }

    // Segments inside a BasicVertical template require a few overrides
    body.vertical & {
        padding: @verticalRhythm5 0;

        @media only screen and (max-width: @largestMobileScreen) {
            > .container > .grid {
                margin-left: 0 !important;
                margin-right: 0 !important;
            }
        }
        @media only screen and (min-width: @tabletBreakpoint) {
            padding: @verticalRhythm5 5%;

            &:first-child {
                padding-top: calc(var(--baseline) * 4rem);
            }
        }

        &#dropdown-toc {
            padding: @verticalRhythm2 0;

            @media only screen and (min-width: @tabletBreakpoint) {
                padding: 0 5%;
            }
        }
    }
}

// Styling for segments on inverted backgrounds
.ui.inverted.segment .segment {
    border: none;
}

// Global backgrounds
.ui.background.segment {
    z-index: 0; // Ensure correct layering with stacked backgrounds

    > .credits {
        z-index: -1;

        position: absolute;
        right: .8em;
        bottom: .3em;
        opacity: .3;
        font-size: .8em;
    }
}

// Specific content types
.ui.segment {
    #hero& {
        border-top: none;
    }
    #toolbar& {
        body.vertical & {
            @media only screen and (min-width: @tabletBreakpoint) {
                padding: @verticalRhythm1 3%;
            }
        }
    }
    #footer& {
        padding: 0;
        > .container:last-child {
            padding: @verticalRhythm2 0;
            border-top: 1px solid @borderColorFooter;
        }
    }
    #author-bio& {
        .stretched.grid > .column > p:last-child {
            flex: 0
        }
    }
}

// Segment with a pointing arrow on one side, for indicating quoted content
.ui.pointing.segment {
    @triangleSize: 13px;
    position: relative;

    // All pointers
    &:after,
    &:before {
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
    }

    &:after {
        border-color: rgba(255, 255, 255, 0);
        border-width: @triangleSize;
    }
    &:before {
        border-color: rgba(222, 222, 222, 0);
        border-width: @triangleSize + 1px;
    }

    // Left pointer
    &.left {
        &:after,
        &:before {
            right: 100%;
            top: 50%;
        }
        &:after {
            border-right-color: @secondaryBackground;
            margin-top: -@triangleSize;
        }
        &:before {
            border-right-color: @borderColor;
            margin-top: -@triangleSize - 1px;
        }
    }

    // Down pointer
    &.down {
        &:after,
        &:before {
            top: 100%;
            left: 50%;
        }
        &:after {
            border-top-color: @secondaryBackground;
            border-width: @triangleSize;
            margin-left: -@triangleSize;
        }
        &:before {
            border-top-color: @borderColor;
            margin-left: -@triangleSize - 1px;
        }
    }

    // Right pointer
    &.right {
        &:after,
        &:before {
            left: 100%;
            top: 50%;
        }
        &:after {
            border-left-color: @secondaryBackground;
            margin-top: -@triangleSize;
        }
        &:before {
            border-left-color: @borderColor;
            margin-top: -@triangleSize - 1px;
        }
    }

    // Up pointer
    &.up {
        &:after,
        &:before {
            bottom: 100%;
            left: 50%;
        }
        &:after {
            border-bottom-color: @secondaryBackground;
            border-width: @triangleSize;
            margin-left: -@triangleSize;
        }
        &:before {
            border-bottom-color: @borderColor;
            margin-left: -@triangleSize - 1px;
        }
    }

    // Change background to white on colored segments
    .stripe.segment:not(.white) & {
        background: #fff;
        &.left:after {
            border-right-color: #fff;
        }
        &.down:after {
            border-top-color: #fff;
        }
    }

    // Set pointer positions for specific segments
    .publication &,
    .list & {
        &.down:after,
        &.down:before {
            left: 33px;
        }
    }
    .testimonial & {
        &.left:after,
        &.left:before {
            top: 6rem;
        }
    }
}

// Segments in accordion / tab combos
.ui.reducible.tab.segment {
    margin: 0;
    &.basic {
        padding: 0;
    }
}

// Segment containing an image that needs to be snapped to one of the edges
.ui.snapped.segment {
    @media only screen and (min-width: @computerBreakpoint) {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
        overflow: hidden;

        // Give the first grid inside some negative margin, to cut off the bottom of the image
        > .container > .grid {
            margin-top: -2rem;
            margin-bottom: -2rem;

            // Counter the negative margin of the grid to stay middle aligned
            //&.middle.aligned > .main.column {
            //    margin-top: -2rem;
            //}
        }
    }
}

// Segment containing an image that needs to be inflated beyond its containers' dimensions
.ui.inflated.segment {
    @media only screen and (min-width: @tabletBreakpoint) {
        > .container > .grid,
        > .container > .grid > .row {
            > .column > .image {
                max-width: none;
                width: 150%;
                float: right;
            }

            // Reverse float to align image with correct edge
            &.reversed > .column > .image {
                float: left;
            }
        }
    }
}

// Segment for displaying patterns in front-end library
.ui.pattern.segment {
    // Hide code icon inside preview columns in front-end library
    .preview.column {
        > .code.link.icon {
            display: none;
            position: absolute;
            left: -1.6em;
            top: 0;
        }

        // Show link when hovering over preview
        &:hover > .code.link.icon {
            display: block;
        }
    }
}

// Segment for demonstrating pattern design and behaviour in backyard area
.ui.backyard.segment {
    &.black {
        background-color: #000;
    }

    // Operate accordion with a small button on top right of segment
    .container {
        position: relative;
    }
    .accordion .title {
        .button {
            position: absolute;
            right: 0;
            top: -2.5rem;

            // Do the rotate trick to turn plus icon into close icon
            .icon {
                transform: rotate(0);
                transition: rotate, 200ms;
            }
        }
        &.active .button .icon {
            transform: rotate(45deg);
        }
    }

    // Make the little toolbar on top right behave
    .toolbar.grid {
        margin-bottom: -0.4rem !important;
    }

    // Segments inside a BasicVertical template require a few overrides
    body.vertical & {
        @media only screen and (min-width: @tabletBreakpoint) {
            padding: 1em 5%;
        }
    }
}

// Segments created by RTE
.ui.text.segment + * {
    margin-top: @verticalRhythm2;
}