/*******************************
         Theme Overrides
*******************************/

.ui.image {
    &.raised {
        box-shadow: @raisedBoxShadow;
    }
    &.lightbox {
        // In order for lightbox images to be correctly clipped when enlarged on
        // hover, the caption needs to be positioned relative to the grandparent.
        position: initial;
        overflow: hidden;

        // Caption is absolutely positioned below regular images
        &:not(.card) > figcaption {
            position: absolute;
            left: 0;
            right: 0;
            margin: 0 auto;
        }

        // Zoom effect on hover, to suggest the image can be enlarged
        img {
            cursor: pointer;
            transition: all .2s;
        }
        &:hover,
        &:focus {
            img {
                transform: scale(1.2);
            }
        }
    }
    &.video {
        height: auto;
    }

    .caption,
    figcaption,
    + figcaption {
        margin-top: 0;
    }

    .credits {
        font-style: normal;
    }

    // Offset content below
    .content & + * {
        margin-top: @verticalRhythm3;
    }
}

// Snapped and inflated images
.ui.snapped.image {
    @media only screen and (min-width: @computerBreakpoint) {
        &[class*="top snapped"] {
            margin-top: calc(@verticalRhythm-5 - 1rem);
        }
        &[class*="bottom snapped"] {
            margin-bottom: calc(@verticalRhythm-5 - 1rem);
        }
    }
}
.ui.inflated.image {
    @media only screen and (min-width: @tabletBreakpoint) {
        max-width: none;
        width: 150%;
        float: right;

        // Reverse float for right aligned images
        .reversed > .column > &,
        :not(.reversed) > .column:last-child > & {
            float: left;
        }
    }
}

// Circular image links
a.circular.image > img {
    border: @circularBorder;
    &:hover {
        border: @circularBorderHover;
    }
}

// Fade in lazy loading images
img.lazy {
    opacity: 0;

    &:not(.initial) {
        transition: opacity 1s;
    }
    &.initial,
    &.loaded,
    &.error {
        opacity: 1;
    }
}

// SVGs
svg {
    fill: currentColor; // Takes the fill color of its container

    // Hide in sprite
    &.hidden {
        display: none;
    }

    // Respect dimensions of image container
    .ui.svg.image & {
        width: 100%;
        height: auto;
    }
}

// Specific scenarios
.testimonial {
    &.column:not(.logo) .image {
        @media only screen and (max-width: @largestMobileScreen) {
            max-width: 40%;
        }
    }
    a.faded.image > img {
        opacity: 0.85;
        transition: opacity, 0.2s;
        &:hover {
            opacity: 1;
        }
    }
}