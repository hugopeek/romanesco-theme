/*******************************
         Theme Overrides
*******************************/

#menu {
    margin: 0;
    height: @mainMenuHeight;

    @media only screen and (max-width: @largestMobileScreen) {
        height: (@mainMenuHeight * 0.8);
    }

    // Specific styles for secondary menu variant
    &.secondary {

    }

    // Alternative styles when sticky
    &.sticky {
        position: fixed;
        top: 0;
        width: 100%;
        transition: height 0.2s, top 0.2s;

        background: @background;
        z-index: 9999;

        // Make sure logo always scales smoothly with navbar
        .logo {
            transition: height 0.2s, max-width 0.2s;
        }

        // Give next segment (hero/cta) some top padding to accommodate the fixed menu
        + .ui.vertical.segment {
            padding-top: (@mainMenuHeight * 1.25);

            @media only screen and (min-width: @tabletBreakpoint) {
                padding-top: (@mainMenuHeight * 1.618);
            }
        }
    }

    // Custom state for sticky menu after scrolling down. Class is set with JS.
    &.tightened {
        height: @mainMenuTightenedHeight;
        box-shadow: @boxShadow;

        // Don't stick on mobile when scrolling down, that takes up too much
        //  valuable screen space. When user is intentionally scrolling up
        //  however, menu becomes visible again for better usability.
        // Depends on the scrolldir NPM package.
        @media only screen and (max-width: @largestMobileScreen) {
            [data-scrolldir="down"] & {
                top: -@mainMenuTightenedHeight;
            }
        }
    }

    // Avoid fluid container sticking to edges
    > .fluid.container {
        margin-left: @gridGutterWidth;
        margin-right: @gridGutterWidth;
    }

    // Make sure width is set to 100% on mobile
    // @todo: is this a bug?
    > .container {
        @media only screen and (max-width: @largestMobileScreen) {
            width: 100% !important;
            margin-left: 1.2em !important;
            margin-right: 1.2em !important;
        }
    }

    // Plain menu buttons
    .right > .item {
        margin: 0 0 0 0.3em;
        font-weight: bold;

        @media (max-width: @largestTabletScreen) {
            display: none;
        }
    }

    // Add delay to dropdowns
    // https://stackoverflow.com/questions/42977848/pure-css-drop-down-menu-with-delay-issue
    &:not(:hover) .simple.dropdown.item {
        transition: background 0.1s;
        transition-delay: 0.8s;
    }
    &:not(:hover) .simple.dropdown.item > ul.menu {
        transition: all 0.1s, top 0s;
        transition-delay: 0.8s;
        width: auto;
        height: auto;
    }
    .simple.dropdown.item:hover > ul.menu,
    .simple.dropdown.item.active,
    .simple.dropdown.item.active > ul.menu {
        transition: all 0s !important;
        transition-delay: 0s !important;
    }

    // Special items
    .item {
        &.branding {
            margin: 0 !important;
            padding: 0 !important;
            flex: 1;
        }
        &.highlight {
            margin: 0 0 0 2rem;
            padding: 0;

            @media (max-width: @largestTabletScreen) {
                display: none;
            }
        }
        &.toc {
            display: none;
            margin: 0 0 0 .5rem;
            padding: 0;

            @media (max-width: @largestTabletScreen) {
                display: flex;
            }
        }
    }
}

#menu-vertical {
    width: auto;
    margin: 0;
    padding: 0;

    // Plain menu buttons
    .item {
        margin: 0;

        &.level-1 {
            margin-bottom: 0.3em;
        }
        &:not(.level-1) {
            border-radius: 0;
        }

        // Specific items
        &.branding {
            margin: 0 !important;
            padding: 0 !important;
        }
        &.toc {
            display: none;
            margin: 0;
            padding: 0;
        }
    }

    // Mobile behaviour
    @media (max-width: @largestMobileScreen) {
        display: flex;
        flex-direction: row;

        .item:not(.branding) {
            display: none;
        }
        .item.branding {
            flex-grow: 1;
        }
        .item.toc {
            display: block;
            flex-grow: 0;
        }
    }

    // Allow margin to be set by a variable
    @media (min-width: @tabletBreakpoint) {
        margin: @verticalMenuMargin;
    }
}

#menu-dropdown {
    margin: 0;
    padding: 0;

    // Override popup dimensions
    .ui.flowing.popup {
        position: fixed;
        max-width: 100%;
        right: 10vh !important;
        left: 10vh !important;
        top: 4.3rem !important;
        z-index: 10;

        .list {
            margin-left: 0;

            // Apply text colors again to ensure correct appearance
            a {
                color: @textMenuItemColor;
                &:hover {
                    color: @textMenuActiveItemColor;
                }
            }

            .active {
                background: none;
                a {
                    font-weight: bold;
                    color: @textMenuActiveItemColor;
                }
            }
        }
    }

    // Stretch links to fit parent item
    li.item {
        padding: 0 !important;
        margin: 0;

        > a {
            display: flex;
            align-self: stretch;
            align-items: center;
        }
    }

    // Styling for level 1 only
    > li.item {
        border-radius: @borderRadius !important; // Make sure border radius persists

        &:hover,
        &.current {
            background: @hoverItemBackground;
        }

        > a {
            line-height: 1;
            padding: @itemVerticalPadding @itemHorizontalPadding;
            color: @itemTextColor;

            > i.icon {
                margin-right: -0.3rem;
            }
        }
    }

    // Styling for level 2 only
    .menu {
        margin-top: 0;
        overflow: hidden;
    }
    .dropdown .item {
        border-radius: 0;

        > a {
            padding: @dropdownItemPadding;
            color: @dropdownItemColor;
        }
    }
}

#menu-accordion {
    margin: 0;
    padding: 0;

    li.item {
        padding: 0;

        &.active > a {
            color: @invertedActiveColor;
            font-weight: @bold;
        }
    }

    // Font sizes per level
    .level-1 {
        font-weight: @bold;
    }
    .level-2 {
        font-weight: @normal;
        &.active {
            font-weight: @bold;
        }
    }
    .level-3 {
        .title > a {
            min-height: 2.5rem;
        }
    }

    // Category items have an independent 'open' icon button on the right
    .title {
        display: flex;

        > a {
            display: flex;
            flex: 1;
            align-self: stretch;
            align-items: center;
            min-height: 3rem;
            padding-left: @itemHorizontalPadding;
            color: @invertedTextColor;

            &.current {
                color: @invertedActiveColor;
            }
        }

        > .button {
            background: none;
            border: none;
            border-radius: 0;
            box-shadow: none;

            // Offset from right, to avoid conflicts with scrollbar
            //margin-right: 2em !important;

            padding: 1em 1.1em;
            color: @invertedLightTextColor;

            #off-canvas & {
                border-left: 1px solid @invertedVerticalDividerBackground;
            }

            i.dropdown:before {
                font-family: 'Icons';
                content: @accordionIconContent;
            }
        }

        &.active {
            font-weight: @bold;
            border-bottom: 1px solid @invertedVerticalDividerBackground;

            > .button {
                color: @invertedActiveColor;
            }

            i.dropdown {
                transform: rotate(@rotateDegrees);
            }
        }

        #menu-vertical & {
            &:hover > .button,
            &.active > .button {
                border-left: 1px solid @invertedVerticalDividerBackground;
            }
        }
    }

    .content {
        margin: 0;
        padding: 0;

        a {
            display: flex;
            padding: .5em @subMenuHorizontalPadding;
            color: @invertedLightTextColor;

            &:hover {
                color: @invertedHoverColor;
            }
        }
        .item .item a {
            padding-left: @subMenuHorizontalPadding * @scaleRatio;
        }
    }

    #off-canvas & {
        border-bottom: 1px solid @invertedVerticalDividerBackground;
    }

}

#menu-neighbors {
    border-radius: 0;
    box-shadow: none;
    border-left: 0;
    border-right: 0;
    margin: 0 0 -1px 0;

    .item {
        padding: @verticalRhythm5 1em !important;

        &:not(:hover) {
            color: @lightTextColor;
        }

        @media only screen and (min-width: @tabletBreakpoint) {
            font-size: @h4;
        }
        @media only screen and (min-width: @computerBreakpoint) {
            font-size: @h3;
        }

        &.left {
            text-align: left;
            justify-content: left;

            > .icon {
                margin: 0.1em .8em 0 0;
            }
        }
        &.right {
            text-align: right;
            justify-content: right;

            > .icon {
                margin: 0.1em 0 0 .8em;
            }
        }
    }
}

#submenu {
    // No top margin to avoid jumpy sticky behaviour
    margin-top: 0;

    &.secondary {
        margin: 0 0 @verticalRhythm2;

        .item:not(.active) {
            color: @subMenuTextColor;
            &:hover {
                color: @secondaryHoverItemColor;
            }
        }
        .item.active {
            font-weight: bold;
        }
        .header > .item.active {
            background: none;
            margin: 0;
            padding: 0;
        }

        // Make sure border radius persists
        &:not(.toc):not(.pointing).fixed .item {
            border-radius: @borderRadius !important;
        }
    }

    &.tabular {
        // Styling tweaks for nested submenu
        &.vertical {
            .item {
                .header a.active {
                    margin-bottom: 0.75em;
                    padding: 0;
                    border: none;
                }
                .menu a.active {
                    border: none;
                }
            }
        }

        // Fix small styling / positioning glitches when submenu is sticky
        &.sticky.bottom {
            border-top: 0;
        }
    }

    // Table of contents
    &.toc {
        .item {
            // Don't waste any space in sidebar ToC
            padding-right: 0 !important;

            &.h1:not(.active) {
                color: @mutedTextColor;
                font-weight: bold;
            }
            &.h2 {
                padding: (@secondaryPointingItemVerticalPadding * 0.8) @secondaryPointingItemHorizontalPadding;
            }
            &.h3 {
                padding: (@secondaryPointingItemVerticalPadding * 0.5) @secondaryPointingItemHorizontalPadding;
                + .h2 {
                    margin-top: .2em;
                }
            }
            &.h4 {
                padding: (@secondaryPointingItemVerticalPadding * 0.3) @secondaryPointingItemHorizontalPadding;
                + .h2 {
                    margin-top: .3em;
                }
                + .h3 {
                    margin-top: .2em;
                }
            }
            &.h5 {
                padding: (@secondaryPointingItemVerticalPadding * 0.3) @secondaryPointingItemHorizontalPadding;
            }
        }
    }

    &.text .item:first-child {
        margin-top: 0;
    }
}

// Some distance from preceding header
#submenu-header {
    margin-bottom: @verticalRhythm1;

    a& {
        display: block;
        margin-top: @verticalRhythm1;
        margin-bottom: @verticalRhythm2;

        // Match specific styling in sidebar
        &.for.submenu-secondary:not(.pointing) {
            margin-left: 0.5em;
        }
    }
}

// ToC is inside a dropdown on mobile
#dropdown-toc {
    .menu {
        .item {
            .level:before {
                margin-right: .3em;
                letter-spacing: .3em;
            }
        }
    }
}

#off-canvas {
    > .item.home {
        min-height: 4rem;
        display: flex;

        > .badge {
            flex: 1;
            height: auto;
            margin-right: 1em;
        }
        > .close {
            box-shadow: none;
            padding: 0.3em;
        }
    }
    > .special {
        padding: @relativeSmall @relativeLarge;
    }
}

#toolbar {
    &.attached.menu {
        border-top: 0;

        // Stretch search field out on mobile
        @media (max-width: @largestMobileScreen) {
            .right.menu {
                width: 100%;

                .search.item,
                #form-search {
                    flex: 1;
                }
                #form-search > .input {
                    display: flex;
                }
            }
        }

        > .item:first-child:before {
            display: none;
        }
    }

    // If next element is a grid, it will overlap the toolbar
    + .grid {
        margin-top: 0;
    }
}

// Shared styling for indicating the level of each item.
// General styling tweaks for vertical pointing menu are further down.
.menu.toc {
    .item {
        display: flex !important;

        .level:before {
            margin-right: .2em;
            letter-spacing: .2em;
            color: @borderColor;

            .inverted& {
                color: @invertedDisabledTextColor;
            }
        }

        &.h3 .level:before {
            content: '•';
        }
        &.h4 .level:before {
            content: '••';
        }
        &.h5 .level:before {
            content: '•••';
        }

        .vertical.text& {
            margin: .15em 0;
        }
    }
}

// Move border to the left for right pointing menus (like ToC)
.ui.secondary.vertical.right.pointing.menu {
    border-right: 0;
    border-left-width: @secondaryPointingBorderWidth;
    border-left-style: solid;
    border-left-color: @secondaryPointingBorderColor;

    .item {
        border-right: 0;
        border-left: @secondaryPointingBorderWidth solid transparent;
        margin-left: -@secondaryPointingBorderWidth;

        &.active {
            border-color: @secondaryPointingActiveBorderColor;
        }
    }
}

.pagination {
    #main > .container > .column > & {
        margin: 6em 0;
    }
}

// Wrapper interferes with margins
.pagination-wrapper {
    #main * + & {
        padding-top: @verticalRhythm2;
    }
    + * {
        margin-top: @verticalRhythm3;
    }
}